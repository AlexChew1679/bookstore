rails g scaffold book name:string author:string description:text price:integer availablity:boolean

at migration file 20170515081458_create_books.rb

                      class CreateBooks < ActiveRecord::Migration[5.0]
                        def change
                          create_table :books do |t|
                            t.string :name
                            t.string :author
                            t.text :description
                            t.integer :price
                            t.boolean :availablity, default: true  <= CHANGES HERE

                            t.timestamps
                          end
                        end
                      end


at views/pages/home.html.erb

                    <div class = 'jumbotron'>
                        <h1>Welcome to BookStore</h1>
                        <p> Largest Online Fitness Bookstore </p>
                        <%= link_to 'Books', books_path, class: 'btn btn-primary btn-lg' %>   <= CHANGES HERE
                        <%= link_to 'Sign Up', new_user_registration_path, class: 'btn btn-primary btn-lg' %>
                    </div>

at _navbar.html.erb  at line 11

                      ]<%= link_to 'BookStore', root_path, class: 'navbar-brand' %>

at pages_controller.rb
                          class PagesController < ApplicationController
                            def home
                              if current_user
                                redirect_to books_path
                              end

                            end
                          end

at views/book/show.html.erb

                    <p id="notice"><%= notice %></p>

                    <div class = 'row'>
                      <div class = 'col-md-6'>
                        <%= image_tag "ruby4.jpg", class: 'img-responsive' %>
                      </div>
                        <div class = 'col-md-6'>
                          <h3><%= @book.name %> by <%= @book.author %></h3>
                          <p><%= @book.description %></p>
                          <h2><strong>$<%= @book.price/100 %></strong></h2>
                        </div>
                    </div>

                    <p>
                      <strong>Availablity:</strong>
                      <%= @book.availablity %>
                    </p>

                    <%= link_to 'Edit', edit_book_path(@book) %> |
                    <%= link_to 'Back', books_path %>

2. Customize Book Index

initially it looks like this  (views/books/index.html.erb)

                                <p id="notice"><%= notice %></p>

                                <h1>Books</h1>

                                <table>
                                  <thead>
                                    <tr>
                                      <th>Name</th>
                                      <th>Author</th>
                                      <th>Description</th>
                                      <th>Price</th>
                                      <th>Availablity</th>
                                      <th colspan="3"></th>
                                    </tr>
                                  </thead>

                                  <tbody>
                                    <% @books.each do |book| %>
                                      <tr>
                                        <td><%= book.name %></td>
                                        <td><%= book.author %></td>
                                        <td><%= book.description %></td>
                                        <td><%= book.price %></td>
                                        <td><%= book.availablity %></td>
                                        <td><%= link_to 'Show', book %></td>
                                        <td><%= link_to 'Edit', edit_book_path(book) %></td>
                                        <td><%= link_to 'Destroy', book, method: :delete, data: { confirm: 'Are you sure?' } %></td>
                                      </tr>
                                    <% end %>
                                  </tbody>
                                </table>

                                <br>

                                <%= link_to 'New Book', new_book_path %>

go to   http://getbootstrap.com/css/#grid, remember the column is max 12,

from the above to only this :

                                  <p id="notice"><%= notice %></p>

                                  <div class = 'row'>
                                    <%= render @books %>   <= PLEASE TAKE NOTE
                                  </div>
                                  <br>

  <%= link_to 'New Book', new_book_path %>
create a partial _book.html.erb


                                      <div class="col-md-3">
                                        <div class="thumbnail">
                                        <%=image_tag 'ruby4.jpg', class: 'img-responsive'%>
                                        </div>
                                        <div class = 'caption'>
                                          <p><strong><%= book.name %></strong></p>
                                          <p><strong>$<%= book.price/100 %></strong></p>
                                        </div>
                                      </div>
                                    </div>

RAILS IS VERY SMART, GO TO BooksController,

                                        def index
                                          @books = Book.all
                                        end

    IT WILL AUTOMATICALLY SEARCH FOR ANYTHING WITH THE TITLE BOOK AND RENDER IT. IT WILL GO TO BooksController THEN TO INDEX ACTION, THEN TO
    INDEX.HTML.ERB THEN RENDER OUT THE _BOOK.HTML.ERB

  what happened if after u edit the book as not available but the book still in the list, books_conroller.rb

                                    def index
                                      @books = Book.all.where(availablity:true)
                                    end

3. adding the book -user association

rails g migration AddUserIdtoBooks user_id:integer

Model file book.rb

                                          class Book < ApplicationRecord
                                            belongs_to :user <= ADD THIS
                                          end

Model file user.rb

                                    class User < ApplicationRecord
                                      # Include default devise modules. Others available are:
                                      # :confirmable, :lockable, :timeoutable and :omniauthable
                                      devise :database_authenticatable, :registerable,
                                             :recoverable, :rememberable, :trackable, :validatable

                                      has_many :books  <= ADD THIS
                                    end

books_controller.rb

class BooksController < ApplicationController
  before_action :authenticate_user!, only: [:new, :edit, :create, :update, :destroy]  <=added at this line only
  before_action :set_book, only: [:show, :edit, :update, :destroy]




4. Creating the Dashboard
this table from getbootstrap  == grid simple table, copy the source and modified...   in order for the code below to work, it must link to controller.
go to pages_controller.rb

                            class PagesController < ApplicationController
                              before_action :authenticate_user!, only: [:dashboard]   <= to ensure the user that login can go to dashboard.

                              def home
                                if current_user
                                  redirect_to books_path
                                end
                              end

                              def dashboard
                                @books = current_user.books       #<= to link to dashboard.html.erb  =@
                              end
                            end


side note:
            @books = current_user.books     = controller
            <% @books.each do |book| %>     = html.erb



<h1> DashBoard </h1>

                          <div class = 'row'>
                            <div class = 'col-md-4'>
                              <h3>Books
                              <%= link_to 'New Book', new_book_path, class: 'btn btn-primary btn-sm' %>
                              </h3>
                                <table class="table table-bordered">
                                  <thead>
                                    <tr>
                                         <th>ID</th>
                                         <th>Name</th>
                                         <th>Available</th>
                                         <th></th>
                                   </tr>
                                 </thead>
                                 <tbody>
                                   <% @books.each do |book| %>          =@ this is to link to controller

                                   <tr>
                                  <td><%= book.id %></td>
                                  <td><%= link_to book.name, book_path(book) %></td>
                                  <td><%= book.availablity %></td>
                                  <td><%= link_to 'Edit', edit_book_path(book) %></td>
                                </tr>
                                <%end%>
                              </tbody>
                            </thead>

                            </div>

                            <div class = 'col-md-4'>
                              <h3>Purchases</h3>
                            </div>

                              <div class = 'col-md-4'>
                                <h3>Sales</h3>
                              </div>

side note: VERY IMPORTANT
                            (book) as per above <td><%= link_to book.name, book_path(book) %></td>
                            if (book) is not placed next to book_path, error will occur cause book.name already being ID, so if there's no (book), Rails
                            cant tell which book id ure refering to...

5. Flash message
change application.html.erb into below :


                            <!DOCTYPE html>
                            <html>
                              <head>
                                <title>Ebook</title>
                                <%= csrf_meta_tags %>

                                <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track': 'reload' %>
                                <%= javascript_include_tag 'application', 'data-turbolinks-track': 'reload' %>
                              </head>

                              <body>
                                <%= render 'layouts/navbar'%>
                                <% flash.each do |type, message| %>          <= changes here til
                                <div class = 'alert alert-info fade-in'>
                                  <button class = 'close' data-dismiss = "alert">X</button>
                                  <%= message %>                             <= Here
                                </div>
                                <%end%>
                                <div class='container' >
                                <%= yield %>
                              </div>
                              </body>
                            </html>

6. Authorization using CAnCan

  install gem 'cancan'  , then run rails g cancan:ability

  then it will created ability.rb at model folder

                                  class Ability
                                    include CanCan::Ability

                                    def initialize(user)
                                      # Define abilities for the passed in user here. For example:
                                      #
                                        user ||= User.new # guest user (not logged in)
                                          can :read, :all
                                          can :manage, Book do |book|
                                            book.try(:user) == user

                                          end


then copy                          authorize! :manage, @book

and place at edit, update and destroy      at books_controller.rb

then go to application_controller.rb    and :

                            class ApplicationController < ActionController::Base
                              protect_from_forgery with: :exception

                              rescue_from CanCan::AccessDenied do |exception|                  <= change from here
                                redirect_to root_path, notice: "You are not authorized to access to this page "
                              end                                                             <= to here

                            end

7. Install paperclip , but make sure ImageMagick is installed ,

gem "paperclip", "~> 5.0.0"    =>  https://github.com/thoughtbot/paperclip


i. rails g paperclip book image                 to class Book , and book have image     (png, jpg)
ii. rails g paperclip book resource             to class Book , and book have resource (pdf)


at books_controller.rb

at the end

                                def book_params
                                  params.require(:book).permit(:name, :author, :description, :price, :availablity, :image, :resource)
                                end
                                end

8. Add dotenv , working with different environments

add  gem file  = gem 'dotenv-rails', groups: [:development]

go to terminal and type  =>  touch .env ,
basically u type all security stuff in this .env file, n is completely safe... 



















SCAFFOLD WILL DO EVERYTHING
